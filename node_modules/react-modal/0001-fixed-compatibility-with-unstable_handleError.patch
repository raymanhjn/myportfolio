From f2db7bf4549fac2b87548c61791e7c2d642e6dba Mon Sep 17 00:00:00 2001
From: restrry <restrry@gmail.com>
Date: Wed, 15 Feb 2017 12:49:19 +0100
Subject: [PATCH 1/2] [fixed] compatibility with unstable_handleError

in current React version componentWillUnmount could be called without calling componentDidMount
if errors during rendering are handled via unstable_handleError method
---
 specs/Modal.spec.js     | 35 ++++++++++++++++++++++++++++++++++-
 lib/components/Modal.js |  4 ++++
 2 files changed, 38 insertions(+), 1 deletion(-)

diff --git a/specs/Modal.spec.js b/specs/Modal.spec.js
index 518bf97..fd3cdfe 100644
--- a/specs/Modal.spec.js
+++ b/specs/Modal.spec.js
@@ -6,7 +6,7 @@
           react/no-render-return-value: "warn"
 */
 import TestUtils from 'react-addons-test-utils';
-import React from 'react';
+import React, { Component } from 'react';
 import sinon from 'sinon';
 import expect from 'expect';
 import ReactDOM from 'react-dom';
@@ -572,4 +572,37 @@ describe('Modal', () => {
       done();
     }, closeTimeoutMS);
   });
+
+  it('shouldn\'t throw if forcibly unmounted during mounting', () => {
+    /* eslint-disable camelcase, react/prop-types */
+    class Wrapper extends Component {
+      constructor (props) {
+        super(props);
+        this.state = { error: false };
+      }
+      unstable_handleError () {
+        this.setState({ error: true });
+      }
+      render () {
+        return this.state.error ? null : <div>{ this.props.children }</div>;
+      }
+    }
+    /* eslint-enable camelcase, react/prop-types */
+
+    const Throw = () => { throw new Error('reason'); };
+    const TestCase = () => (
+      <Wrapper>
+        <Modal />
+        <Throw />
+      </Wrapper>
+    );
+
+    const currentDiv = document.createElement('div');
+    document.body.appendChild(currentDiv);
+
+    const mount = () => ReactDOM.render(<TestCase />, currentDiv);
+    expect(mount).toNotThrow();
+
+    document.body.removeChild(currentDiv);
+  });
 });
diff --git a/lib/components/Modal.js b/lib/components/Modal.js
index 6f4776e..0df11ba 100644
--- a/lib/components/Modal.js
+++ b/lib/components/Modal.js
@@ -87,6 +87,8 @@ export default class Modal extends Component {
     const parent = getParentElement(this.props.parentSelector);
     parent.appendChild(this.node);
     this.renderPortal(this.props);
+
+    this.mounted = true;
   }
 
   componentWillReceiveProps (newProps) {
@@ -102,6 +104,8 @@ export default class Modal extends Component {
   }
 
   componentWillUnmount () {
+    if (!this.mounted) return;
+
     if (this.props.ariaHideApp) {
       ariaAppHider.show(this.props.getAppElement());
     }
-- 
2.13.0

